{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBAETN,EAAWO,OAAOC,OAAS,IAC1BV,GAAc,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACvCR,EAAc,MAKlB,UACI,kCAAKD,EAAL,OACA,uBACIU,KAAK,OACLC,MAAOX,EACPY,SApBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,c,sCCPfG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,0DAC8CC,UAAUH,GADxD,sDAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1CZ,QAAQC,IAAIiB,GAZM,kBAaXA,GAbW,4CAAH,sDCEVO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAOf,EAAMgB,IAAQN,IAC1B,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEbhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgCvC,OAzBAC,qBAAW,WACVxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAiBEqB,ED1ByBK,CAAa1B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAOpB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAAyDhB,EAAzD,OACCoB,GAAW,mBAAGJ,UAAU,wCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aEetBgB,EApCM,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAIb5C,mBAAS4C,GAJI,mBAI1CC,EAJ0C,KAI9B9C,EAJ8B,KAYhD,OACG,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ8C,EAAWpB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAEKA,SAAaA,GADRA,Y,MCvBzC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.19eb1d5c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log('Submit hecho');\r\n        \r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue, ...cats ]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <p> {inputValue} </p>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}             \r\n            />\r\n        </form>       \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n   export const getGifs = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=mgLQedx4I8frrmLzL42XASgRsWX3Wxkw`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id : img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        return gifs;\r\n    }","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <img src= { url } alt = { title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n}","//import React, { useState, useEffect } from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // useEffect( ()=> {\r\n    //     getGifs(category)\r\n    //     .then(setImages);\r\n    // }, [category])\r\n\r\n    return ( \r\n        <>\r\n            <h3 className=\"card animate__animated animate__fadeIn\"> {category} </h3>  \r\n            {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img => {\r\n                        return <GifGridItem  \r\n                            key={img.id}\r\n                            {...img}\r\n                            //img = {img} \r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n   const [state, setState] = useState({\r\n       data: [],\r\n       loading: true\r\n   });\r\n\r\n   useEffect( ()=> {\r\n    getGifs(category)\r\n        .then(imgs => {        \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: imgs,\r\n    //         loading : false\r\n    //     })\r\n        \r\n    // }, 3000);\r\n//    setTimeout(() => {\r\n//        setState({\r\n//            data: [1,2,3,4,5,6,7],\r\n//            loading : false\r\n//        })\r\n       \r\n//    }, 3000);\r\n\r\n   return state; //{ data: [], loading: true}\r\n}\r\n","import React, {useState} from 'react';  \r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ({ defaultCategories = [] }) => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n   // const [categories, setCategories] = useState(['One Punch'])  \r\n    const [categories, setCategories] = useState(defaultCategories);\r\n\r\n    // const handleAdd  = (e) => { \r\n    //     //console.log(e)\r\n    //     //setCategories(['HunterXHunter', ...categories]);\r\n    //     setCategories(cats => [...cats, 'HunterXHunter' ]);  \r\n    // } \r\n\r\n     return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid \r\n                                    key={category} \r\n                                    category = { category }\r\n                               />\r\n                        //return <li key={category}>{category}</li>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}